DevOps 2

NodeJS template
Comment coder ce projet from scratch
1- Ouvrir un terminal git bash.

2- Se rendre dans l'endroit de notre choix en utilisant cd, ls.

3- Cr√©er notre projet :

# cr√©er un dossier pour le projet et s'y rendre
mkdir projet-docker
cd projet-docker

# faire un repository git
git init

# cr√©er le package.json pour faire un projet js
npm init

# installer le package express
npm install express

# installer les d√©pendances
npm install

!!!! DANS UN TERMINAL BASH
# attention √† toujours ignorer node_modules !!!! DANS UN TERMINAL BASH
touch .gitignore
# √©crire node_modules dans .gitignore

# cr√©er les fichiers n√©cessaires pour le projet
mkdir src
touch src/index.js
Le package.json devrait commencer par les lignes suivantes : (attention √† bien ajouter le script "start" !)
----------------------


{
  "name": "le nom de ton app",
  "version": "une certaine version",
  "description": "ta description",
  "main": "index.js",
  "scripts": {
    "start": "node src/index.js"
  }
  // le reste du fichier...
}
√âcrire ce code dans src/index.js :

const app = require("express")();

app.get("/", (req, res) => res.json({ message: "Bonjouuuur :)" }));

const port = process.env.PORT || 8080;

app.listen(port, () =>
  console.log(`app listening on http://localhost:${port}`)
);

Et voil√† on a une app backend NodeJS üòé Il suffit de faire npm start (comme indiqu√© dans package.json) pour lancer le serveur, depuis le terminal.


Ajouter le Dockerfile
touch Dockerfile
Contenu du fichier Dockerfile √† cr√©er √† la racine du projet ::::::
# Utilisation d'une image de base Node.js
FROM node:18

# Cr√©ation du r√©pertoire de travail dans le conteneur
WORKDIR /app

# Copie des fichiers du projet dans le conteneur
COPY package*.json ./

# Installation des d√©pendances
RUN npm install

# Copie du reste des fichiers dans le conteneur
COPY . .

# Exposition du port utilis√© par l'application
EXPOSE 3000

# Commande pour d√©marrer l'application
CMD ["npm", "start"]

(npm start)
docker build -t ton_image .
docker run -p 3000:3000 ton_image !!!!! ATTENTION CHANGER NOM IMAGE SI ON VEUT NOM SP√© DS DOCKER
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Ne pas oublier d'ignorer les fichiers ou dossiers trop volumineux inutiles.

Exemple, comme pour le fichier .gitignore, on souhaite ignorer node_modules qui est √©norme, et qui peut √™tre r√©install√© gr√¢ce √† un simple npm install (pour √ßa, le package.json doit d√©j√† √™tre dans votre dossier de projet).

Dans votre dossier, faites un fichier .dockerignore pour y √©crire node_modules.